// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: admin_protocol.proto

#ifndef PROTOBUF_admin_5fprotocol_2eproto__INCLUDED
#define PROTOBUF_admin_5fprotocol_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2003000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2003000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>
// @@protoc_insertion_point(includes)

namespace ttc {
namespace agent {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_admin_5fprotocol_2eproto();
void protobuf_AssignDesc_admin_5fprotocol_2eproto();
void protobuf_ShutdownFile_admin_5fprotocol_2eproto();

class AddCacheServerRequest;
class AddModuleRequest;
class ChangeCacheServerAddrRequest;
class RemoveCacheServerRequest;
class RemoveModuleRequest;
class ReloadConfigRequest;
class Reply;
class HeartBeat;
class HeartBeatReply;
class GetLatestConfigure;
class LatestConfigureReply;
class UpdateConfigure;
class UpdateConfigureReply;
class SetPush;
class SetPushReply;
class QueryAgentStatus;
class QueryAgentStatusReply;

// ===================================================================

class AddCacheServerRequest : public ::google::protobuf::Message {
 public:
  AddCacheServerRequest();
  virtual ~AddCacheServerRequest();
  
  AddCacheServerRequest(const AddCacheServerRequest& from);
  
  inline AddCacheServerRequest& operator=(const AddCacheServerRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const AddCacheServerRequest& default_instance();
  
  void Swap(AddCacheServerRequest* other);
  
  // implements Message ----------------------------------------------
  
  AddCacheServerRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AddCacheServerRequest& from);
  void MergeFrom(const AddCacheServerRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 module = 1;
  inline bool has_module() const;
  inline void clear_module();
  static const int kModuleFieldNumber = 1;
  inline ::google::protobuf::uint32 module() const;
  inline void set_module(::google::protobuf::uint32 value);
  
  // required uint32 instanceid = 2;
  inline bool has_instanceid() const;
  inline void clear_instanceid();
  static const int kInstanceidFieldNumber = 2;
  inline ::google::protobuf::uint32 instanceid() const;
  inline void set_instanceid(::google::protobuf::uint32 value);
  
  // required string name = 3;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 3;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  
  // required string addr = 4;
  inline bool has_addr() const;
  inline void clear_addr();
  static const int kAddrFieldNumber = 4;
  inline const ::std::string& addr() const;
  inline void set_addr(const ::std::string& value);
  inline void set_addr(const char* value);
  inline void set_addr(const char* value, size_t size);
  inline ::std::string* mutable_addr();
  
  // optional int32 virtual_node = 5 [default = -1];
  inline bool has_virtual_node() const;
  inline void clear_virtual_node();
  static const int kVirtualNodeFieldNumber = 5;
  inline ::google::protobuf::int32 virtual_node() const;
  inline void set_virtual_node(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:ttc.agent.AddCacheServerRequest)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 module_;
  ::google::protobuf::uint32 instanceid_;
  ::std::string* name_;
  static const ::std::string _default_name_;
  ::std::string* addr_;
  static const ::std::string _default_addr_;
  ::google::protobuf::int32 virtual_node_;
  friend void  protobuf_AddDesc_admin_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_admin_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_admin_5fprotocol_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static AddCacheServerRequest* default_instance_;
};
// -------------------------------------------------------------------

class AddModuleRequest : public ::google::protobuf::Message {
 public:
  AddModuleRequest();
  virtual ~AddModuleRequest();
  
  AddModuleRequest(const AddModuleRequest& from);
  
  inline AddModuleRequest& operator=(const AddModuleRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const AddModuleRequest& default_instance();
  
  void Swap(AddModuleRequest* other);
  
  // implements Message ----------------------------------------------
  
  AddModuleRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AddModuleRequest& from);
  void MergeFrom(const AddModuleRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 module = 1;
  inline bool has_module() const;
  inline void clear_module();
  static const int kModuleFieldNumber = 1;
  inline ::google::protobuf::uint32 module() const;
  inline void set_module(::google::protobuf::uint32 value);
  
  // required string addr = 2;
  inline bool has_addr() const;
  inline void clear_addr();
  static const int kAddrFieldNumber = 2;
  inline const ::std::string& addr() const;
  inline void set_addr(const ::std::string& value);
  inline void set_addr(const char* value);
  inline void set_addr(const char* value, size_t size);
  inline ::std::string* mutable_addr();
  
  // required string accesstoken = 3;
  inline bool has_accesstoken() const;
  inline void clear_accesstoken();
  static const int kAccesstokenFieldNumber = 3;
  inline const ::std::string& accesstoken() const;
  inline void set_accesstoken(const ::std::string& value);
  inline void set_accesstoken(const char* value);
  inline void set_accesstoken(const char* value, size_t size);
  inline ::std::string* mutable_accesstoken();
  
  // @@protoc_insertion_point(class_scope:ttc.agent.AddModuleRequest)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 module_;
  ::std::string* addr_;
  static const ::std::string _default_addr_;
  ::std::string* accesstoken_;
  static const ::std::string _default_accesstoken_;
  friend void  protobuf_AddDesc_admin_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_admin_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_admin_5fprotocol_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static AddModuleRequest* default_instance_;
};
// -------------------------------------------------------------------

class ChangeCacheServerAddrRequest : public ::google::protobuf::Message {
 public:
  ChangeCacheServerAddrRequest();
  virtual ~ChangeCacheServerAddrRequest();
  
  ChangeCacheServerAddrRequest(const ChangeCacheServerAddrRequest& from);
  
  inline ChangeCacheServerAddrRequest& operator=(const ChangeCacheServerAddrRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ChangeCacheServerAddrRequest& default_instance();
  
  void Swap(ChangeCacheServerAddrRequest* other);
  
  // implements Message ----------------------------------------------
  
  ChangeCacheServerAddrRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ChangeCacheServerAddrRequest& from);
  void MergeFrom(const ChangeCacheServerAddrRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 module = 1;
  inline bool has_module() const;
  inline void clear_module();
  static const int kModuleFieldNumber = 1;
  inline ::google::protobuf::uint32 module() const;
  inline void set_module(::google::protobuf::uint32 value);
  
  // required string name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  
  // required string addr = 3;
  inline bool has_addr() const;
  inline void clear_addr();
  static const int kAddrFieldNumber = 3;
  inline const ::std::string& addr() const;
  inline void set_addr(const ::std::string& value);
  inline void set_addr(const char* value);
  inline void set_addr(const char* value, size_t size);
  inline ::std::string* mutable_addr();
  
  // @@protoc_insertion_point(class_scope:ttc.agent.ChangeCacheServerAddrRequest)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 module_;
  ::std::string* name_;
  static const ::std::string _default_name_;
  ::std::string* addr_;
  static const ::std::string _default_addr_;
  friend void  protobuf_AddDesc_admin_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_admin_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_admin_5fprotocol_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static ChangeCacheServerAddrRequest* default_instance_;
};
// -------------------------------------------------------------------

class RemoveCacheServerRequest : public ::google::protobuf::Message {
 public:
  RemoveCacheServerRequest();
  virtual ~RemoveCacheServerRequest();
  
  RemoveCacheServerRequest(const RemoveCacheServerRequest& from);
  
  inline RemoveCacheServerRequest& operator=(const RemoveCacheServerRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const RemoveCacheServerRequest& default_instance();
  
  void Swap(RemoveCacheServerRequest* other);
  
  // implements Message ----------------------------------------------
  
  RemoveCacheServerRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RemoveCacheServerRequest& from);
  void MergeFrom(const RemoveCacheServerRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 module = 1;
  inline bool has_module() const;
  inline void clear_module();
  static const int kModuleFieldNumber = 1;
  inline ::google::protobuf::uint32 module() const;
  inline void set_module(::google::protobuf::uint32 value);
  
  // required string name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  
  // optional int32 virtual_node = 3 [default = -1];
  inline bool has_virtual_node() const;
  inline void clear_virtual_node();
  static const int kVirtualNodeFieldNumber = 3;
  inline ::google::protobuf::int32 virtual_node() const;
  inline void set_virtual_node(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:ttc.agent.RemoveCacheServerRequest)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 module_;
  ::std::string* name_;
  static const ::std::string _default_name_;
  ::google::protobuf::int32 virtual_node_;
  friend void  protobuf_AddDesc_admin_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_admin_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_admin_5fprotocol_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static RemoveCacheServerRequest* default_instance_;
};
// -------------------------------------------------------------------

class RemoveModuleRequest : public ::google::protobuf::Message {
 public:
  RemoveModuleRequest();
  virtual ~RemoveModuleRequest();
  
  RemoveModuleRequest(const RemoveModuleRequest& from);
  
  inline RemoveModuleRequest& operator=(const RemoveModuleRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const RemoveModuleRequest& default_instance();
  
  void Swap(RemoveModuleRequest* other);
  
  // implements Message ----------------------------------------------
  
  RemoveModuleRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RemoveModuleRequest& from);
  void MergeFrom(const RemoveModuleRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 module = 1;
  inline bool has_module() const;
  inline void clear_module();
  static const int kModuleFieldNumber = 1;
  inline ::google::protobuf::uint32 module() const;
  inline void set_module(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:ttc.agent.RemoveModuleRequest)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 module_;
  friend void  protobuf_AddDesc_admin_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_admin_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_admin_5fprotocol_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static RemoveModuleRequest* default_instance_;
};
// -------------------------------------------------------------------

class ReloadConfigRequest : public ::google::protobuf::Message {
 public:
  ReloadConfigRequest();
  virtual ~ReloadConfigRequest();
  
  ReloadConfigRequest(const ReloadConfigRequest& from);
  
  inline ReloadConfigRequest& operator=(const ReloadConfigRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ReloadConfigRequest& default_instance();
  
  void Swap(ReloadConfigRequest* other);
  
  // implements Message ----------------------------------------------
  
  ReloadConfigRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReloadConfigRequest& from);
  void MergeFrom(const ReloadConfigRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required string config = 1;
  inline bool has_config() const;
  inline void clear_config();
  static const int kConfigFieldNumber = 1;
  inline const ::std::string& config() const;
  inline void set_config(const ::std::string& value);
  inline void set_config(const char* value);
  inline void set_config(const char* value, size_t size);
  inline ::std::string* mutable_config();
  
  // @@protoc_insertion_point(class_scope:ttc.agent.ReloadConfigRequest)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::std::string* config_;
  static const ::std::string _default_config_;
  friend void  protobuf_AddDesc_admin_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_admin_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_admin_5fprotocol_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static ReloadConfigRequest* default_instance_;
};
// -------------------------------------------------------------------

class Reply : public ::google::protobuf::Message {
 public:
  Reply();
  virtual ~Reply();
  
  Reply(const Reply& from);
  
  inline Reply& operator=(const Reply& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const Reply& default_instance();
  
  void Swap(Reply* other);
  
  // implements Message ----------------------------------------------
  
  Reply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Reply& from);
  void MergeFrom(const Reply& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 status = 1;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 1;
  inline ::google::protobuf::uint32 status() const;
  inline void set_status(::google::protobuf::uint32 value);
  
  // required string msg = 2;
  inline bool has_msg() const;
  inline void clear_msg();
  static const int kMsgFieldNumber = 2;
  inline const ::std::string& msg() const;
  inline void set_msg(const ::std::string& value);
  inline void set_msg(const char* value);
  inline void set_msg(const char* value, size_t size);
  inline ::std::string* mutable_msg();
  
  // @@protoc_insertion_point(class_scope:ttc.agent.Reply)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 status_;
  ::std::string* msg_;
  static const ::std::string _default_msg_;
  friend void  protobuf_AddDesc_admin_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_admin_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_admin_5fprotocol_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static Reply* default_instance_;
};
// -------------------------------------------------------------------

class HeartBeat : public ::google::protobuf::Message {
 public:
  HeartBeat();
  virtual ~HeartBeat();
  
  HeartBeat(const HeartBeat& from);
  
  inline HeartBeat& operator=(const HeartBeat& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const HeartBeat& default_instance();
  
  void Swap(HeartBeat* other);
  
  // implements Message ----------------------------------------------
  
  HeartBeat* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HeartBeat& from);
  void MergeFrom(const HeartBeat& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required string version = 1;
  inline bool has_version() const;
  inline void clear_version();
  static const int kVersionFieldNumber = 1;
  inline const ::std::string& version() const;
  inline void set_version(const ::std::string& value);
  inline void set_version(const char* value);
  inline void set_version(const char* value, size_t size);
  inline ::std::string* mutable_version();
  
  // required uint32 configure_version = 2;
  inline bool has_configure_version() const;
  inline void clear_configure_version();
  static const int kConfigureVersionFieldNumber = 2;
  inline ::google::protobuf::uint32 configure_version() const;
  inline void set_configure_version(::google::protobuf::uint32 value);
  
  // required string configure_md5 = 3;
  inline bool has_configure_md5() const;
  inline void clear_configure_md5();
  static const int kConfigureMd5FieldNumber = 3;
  inline const ::std::string& configure_md5() const;
  inline void set_configure_md5(const ::std::string& value);
  inline void set_configure_md5(const char* value);
  inline void set_configure_md5(const char* value, size_t size);
  inline ::std::string* mutable_configure_md5();
  
  // required uint32 agent_id = 4;
  inline bool has_agent_id() const;
  inline void clear_agent_id();
  static const int kAgentIdFieldNumber = 4;
  inline ::google::protobuf::uint32 agent_id() const;
  inline void set_agent_id(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:ttc.agent.HeartBeat)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::std::string* version_;
  static const ::std::string _default_version_;
  ::google::protobuf::uint32 configure_version_;
  ::std::string* configure_md5_;
  static const ::std::string _default_configure_md5_;
  ::google::protobuf::uint32 agent_id_;
  friend void  protobuf_AddDesc_admin_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_admin_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_admin_5fprotocol_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static HeartBeat* default_instance_;
};
// -------------------------------------------------------------------

class HeartBeatReply : public ::google::protobuf::Message {
 public:
  HeartBeatReply();
  virtual ~HeartBeatReply();
  
  HeartBeatReply(const HeartBeatReply& from);
  
  inline HeartBeatReply& operator=(const HeartBeatReply& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const HeartBeatReply& default_instance();
  
  void Swap(HeartBeatReply* other);
  
  // implements Message ----------------------------------------------
  
  HeartBeatReply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HeartBeatReply& from);
  void MergeFrom(const HeartBeatReply& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 latest_configure_version = 1;
  inline bool has_latest_configure_version() const;
  inline void clear_latest_configure_version();
  static const int kLatestConfigureVersionFieldNumber = 1;
  inline ::google::protobuf::uint32 latest_configure_version() const;
  inline void set_latest_configure_version(::google::protobuf::uint32 value);
  
  // required string latest_configure_md5 = 2;
  inline bool has_latest_configure_md5() const;
  inline void clear_latest_configure_md5();
  static const int kLatestConfigureMd5FieldNumber = 2;
  inline const ::std::string& latest_configure_md5() const;
  inline void set_latest_configure_md5(const ::std::string& value);
  inline void set_latest_configure_md5(const char* value);
  inline void set_latest_configure_md5(const char* value, size_t size);
  inline ::std::string* mutable_latest_configure_md5();
  
  // optional bool push = 3 [default = false];
  inline bool has_push() const;
  inline void clear_push();
  static const int kPushFieldNumber = 3;
  inline bool push() const;
  inline void set_push(bool value);
  
  // @@protoc_insertion_point(class_scope:ttc.agent.HeartBeatReply)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 latest_configure_version_;
  ::std::string* latest_configure_md5_;
  static const ::std::string _default_latest_configure_md5_;
  bool push_;
  friend void  protobuf_AddDesc_admin_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_admin_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_admin_5fprotocol_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static HeartBeatReply* default_instance_;
};
// -------------------------------------------------------------------

class GetLatestConfigure : public ::google::protobuf::Message {
 public:
  GetLatestConfigure();
  virtual ~GetLatestConfigure();
  
  GetLatestConfigure(const GetLatestConfigure& from);
  
  inline GetLatestConfigure& operator=(const GetLatestConfigure& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetLatestConfigure& default_instance();
  
  void Swap(GetLatestConfigure* other);
  
  // implements Message ----------------------------------------------
  
  GetLatestConfigure* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetLatestConfigure& from);
  void MergeFrom(const GetLatestConfigure& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 configure_version = 1;
  inline bool has_configure_version() const;
  inline void clear_configure_version();
  static const int kConfigureVersionFieldNumber = 1;
  inline ::google::protobuf::uint32 configure_version() const;
  inline void set_configure_version(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:ttc.agent.GetLatestConfigure)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 configure_version_;
  friend void  protobuf_AddDesc_admin_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_admin_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_admin_5fprotocol_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static GetLatestConfigure* default_instance_;
};
// -------------------------------------------------------------------

class LatestConfigureReply : public ::google::protobuf::Message {
 public:
  LatestConfigureReply();
  virtual ~LatestConfigureReply();
  
  LatestConfigureReply(const LatestConfigureReply& from);
  
  inline LatestConfigureReply& operator=(const LatestConfigureReply& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const LatestConfigureReply& default_instance();
  
  void Swap(LatestConfigureReply* other);
  
  // implements Message ----------------------------------------------
  
  LatestConfigureReply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LatestConfigureReply& from);
  void MergeFrom(const LatestConfigureReply& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 configure_version = 1;
  inline bool has_configure_version() const;
  inline void clear_configure_version();
  static const int kConfigureVersionFieldNumber = 1;
  inline ::google::protobuf::uint32 configure_version() const;
  inline void set_configure_version(::google::protobuf::uint32 value);
  
  // required string configure = 2;
  inline bool has_configure() const;
  inline void clear_configure();
  static const int kConfigureFieldNumber = 2;
  inline const ::std::string& configure() const;
  inline void set_configure(const ::std::string& value);
  inline void set_configure(const char* value);
  inline void set_configure(const char* value, size_t size);
  inline ::std::string* mutable_configure();
  
  // @@protoc_insertion_point(class_scope:ttc.agent.LatestConfigureReply)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 configure_version_;
  ::std::string* configure_;
  static const ::std::string _default_configure_;
  friend void  protobuf_AddDesc_admin_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_admin_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_admin_5fprotocol_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static LatestConfigureReply* default_instance_;
};
// -------------------------------------------------------------------

class UpdateConfigure : public ::google::protobuf::Message {
 public:
  UpdateConfigure();
  virtual ~UpdateConfigure();
  
  UpdateConfigure(const UpdateConfigure& from);
  
  inline UpdateConfigure& operator=(const UpdateConfigure& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const UpdateConfigure& default_instance();
  
  void Swap(UpdateConfigure* other);
  
  // implements Message ----------------------------------------------
  
  UpdateConfigure* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UpdateConfigure& from);
  void MergeFrom(const UpdateConfigure& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 version = 1;
  inline bool has_version() const;
  inline void clear_version();
  static const int kVersionFieldNumber = 1;
  inline ::google::protobuf::uint32 version() const;
  inline void set_version(::google::protobuf::uint32 value);
  
  // required string configure_cksum = 2;
  inline bool has_configure_cksum() const;
  inline void clear_configure_cksum();
  static const int kConfigureCksumFieldNumber = 2;
  inline const ::std::string& configure_cksum() const;
  inline void set_configure_cksum(const ::std::string& value);
  inline void set_configure_cksum(const char* value);
  inline void set_configure_cksum(const char* value, size_t size);
  inline ::std::string* mutable_configure_cksum();
  
  // required string configure = 3;
  inline bool has_configure() const;
  inline void clear_configure();
  static const int kConfigureFieldNumber = 3;
  inline const ::std::string& configure() const;
  inline void set_configure(const ::std::string& value);
  inline void set_configure(const char* value);
  inline void set_configure(const char* value, size_t size);
  inline ::std::string* mutable_configure();
  
  // @@protoc_insertion_point(class_scope:ttc.agent.UpdateConfigure)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 version_;
  ::std::string* configure_cksum_;
  static const ::std::string _default_configure_cksum_;
  ::std::string* configure_;
  static const ::std::string _default_configure_;
  friend void  protobuf_AddDesc_admin_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_admin_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_admin_5fprotocol_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static UpdateConfigure* default_instance_;
};
// -------------------------------------------------------------------

class UpdateConfigureReply : public ::google::protobuf::Message {
 public:
  UpdateConfigureReply();
  virtual ~UpdateConfigureReply();
  
  UpdateConfigureReply(const UpdateConfigureReply& from);
  
  inline UpdateConfigureReply& operator=(const UpdateConfigureReply& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const UpdateConfigureReply& default_instance();
  
  void Swap(UpdateConfigureReply* other);
  
  // implements Message ----------------------------------------------
  
  UpdateConfigureReply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UpdateConfigureReply& from);
  void MergeFrom(const UpdateConfigureReply& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 ok = 1;
  inline bool has_ok() const;
  inline void clear_ok();
  static const int kOkFieldNumber = 1;
  inline ::google::protobuf::uint32 ok() const;
  inline void set_ok(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:ttc.agent.UpdateConfigureReply)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 ok_;
  friend void  protobuf_AddDesc_admin_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_admin_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_admin_5fprotocol_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static UpdateConfigureReply* default_instance_;
};
// -------------------------------------------------------------------

class SetPush : public ::google::protobuf::Message {
 public:
  SetPush();
  virtual ~SetPush();
  
  SetPush(const SetPush& from);
  
  inline SetPush& operator=(const SetPush& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const SetPush& default_instance();
  
  void Swap(SetPush* other);
  
  // implements Message ----------------------------------------------
  
  SetPush* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SetPush& from);
  void MergeFrom(const SetPush& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 push = 1;
  inline bool has_push() const;
  inline void clear_push();
  static const int kPushFieldNumber = 1;
  inline ::google::protobuf::uint32 push() const;
  inline void set_push(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:ttc.agent.SetPush)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 push_;
  friend void  protobuf_AddDesc_admin_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_admin_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_admin_5fprotocol_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static SetPush* default_instance_;
};
// -------------------------------------------------------------------

class SetPushReply : public ::google::protobuf::Message {
 public:
  SetPushReply();
  virtual ~SetPushReply();
  
  SetPushReply(const SetPushReply& from);
  
  inline SetPushReply& operator=(const SetPushReply& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const SetPushReply& default_instance();
  
  void Swap(SetPushReply* other);
  
  // implements Message ----------------------------------------------
  
  SetPushReply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SetPushReply& from);
  void MergeFrom(const SetPushReply& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 ok = 1;
  inline bool has_ok() const;
  inline void clear_ok();
  static const int kOkFieldNumber = 1;
  inline ::google::protobuf::uint32 ok() const;
  inline void set_ok(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:ttc.agent.SetPushReply)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 ok_;
  friend void  protobuf_AddDesc_admin_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_admin_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_admin_5fprotocol_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static SetPushReply* default_instance_;
};
// -------------------------------------------------------------------

class QueryAgentStatus : public ::google::protobuf::Message {
 public:
  QueryAgentStatus();
  virtual ~QueryAgentStatus();
  
  QueryAgentStatus(const QueryAgentStatus& from);
  
  inline QueryAgentStatus& operator=(const QueryAgentStatus& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const QueryAgentStatus& default_instance();
  
  void Swap(QueryAgentStatus* other);
  
  // implements Message ----------------------------------------------
  
  QueryAgentStatus* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const QueryAgentStatus& from);
  void MergeFrom(const QueryAgentStatus& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:ttc.agent.QueryAgentStatus)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 id_;
  friend void  protobuf_AddDesc_admin_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_admin_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_admin_5fprotocol_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static QueryAgentStatus* default_instance_;
};
// -------------------------------------------------------------------

class QueryAgentStatusReply : public ::google::protobuf::Message {
 public:
  QueryAgentStatusReply();
  virtual ~QueryAgentStatusReply();
  
  QueryAgentStatusReply(const QueryAgentStatusReply& from);
  
  inline QueryAgentStatusReply& operator=(const QueryAgentStatusReply& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const QueryAgentStatusReply& default_instance();
  
  void Swap(QueryAgentStatusReply* other);
  
  // implements Message ----------------------------------------------
  
  QueryAgentStatusReply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const QueryAgentStatusReply& from);
  void MergeFrom(const QueryAgentStatusReply& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);
  
  // required uint32 dbtime = 2;
  inline bool has_dbtime() const;
  inline void clear_dbtime();
  static const int kDbtimeFieldNumber = 2;
  inline ::google::protobuf::uint32 dbtime() const;
  inline void set_dbtime(::google::protobuf::uint32 value);
  
  // required uint32 lmtime = 3;
  inline bool has_lmtime() const;
  inline void clear_lmtime();
  static const int kLmtimeFieldNumber = 3;
  inline ::google::protobuf::uint32 lmtime() const;
  inline void set_lmtime(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:ttc.agent.QueryAgentStatusReply)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 dbtime_;
  ::google::protobuf::uint32 lmtime_;
  friend void  protobuf_AddDesc_admin_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_admin_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_admin_5fprotocol_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static QueryAgentStatusReply* default_instance_;
};
// ===================================================================


// ===================================================================

// AddCacheServerRequest

// required uint32 module = 1;
inline bool AddCacheServerRequest::has_module() const {
  return _has_bit(0);
}
inline void AddCacheServerRequest::clear_module() {
  module_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 AddCacheServerRequest::module() const {
  return module_;
}
inline void AddCacheServerRequest::set_module(::google::protobuf::uint32 value) {
  _set_bit(0);
  module_ = value;
}

// required uint32 instanceid = 2;
inline bool AddCacheServerRequest::has_instanceid() const {
  return _has_bit(1);
}
inline void AddCacheServerRequest::clear_instanceid() {
  instanceid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 AddCacheServerRequest::instanceid() const {
  return instanceid_;
}
inline void AddCacheServerRequest::set_instanceid(::google::protobuf::uint32 value) {
  _set_bit(1);
  instanceid_ = value;
}

// required string name = 3;
inline bool AddCacheServerRequest::has_name() const {
  return _has_bit(2);
}
inline void AddCacheServerRequest::clear_name() {
  if (name_ != &_default_name_) {
    name_->clear();
  }
  _clear_bit(2);
}
inline const ::std::string& AddCacheServerRequest::name() const {
  return *name_;
}
inline void AddCacheServerRequest::set_name(const ::std::string& value) {
  _set_bit(2);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void AddCacheServerRequest::set_name(const char* value) {
  _set_bit(2);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void AddCacheServerRequest::set_name(const char* value, size_t size) {
  _set_bit(2);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* AddCacheServerRequest::mutable_name() {
  _set_bit(2);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  return name_;
}

// required string addr = 4;
inline bool AddCacheServerRequest::has_addr() const {
  return _has_bit(3);
}
inline void AddCacheServerRequest::clear_addr() {
  if (addr_ != &_default_addr_) {
    addr_->clear();
  }
  _clear_bit(3);
}
inline const ::std::string& AddCacheServerRequest::addr() const {
  return *addr_;
}
inline void AddCacheServerRequest::set_addr(const ::std::string& value) {
  _set_bit(3);
  if (addr_ == &_default_addr_) {
    addr_ = new ::std::string;
  }
  addr_->assign(value);
}
inline void AddCacheServerRequest::set_addr(const char* value) {
  _set_bit(3);
  if (addr_ == &_default_addr_) {
    addr_ = new ::std::string;
  }
  addr_->assign(value);
}
inline void AddCacheServerRequest::set_addr(const char* value, size_t size) {
  _set_bit(3);
  if (addr_ == &_default_addr_) {
    addr_ = new ::std::string;
  }
  addr_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* AddCacheServerRequest::mutable_addr() {
  _set_bit(3);
  if (addr_ == &_default_addr_) {
    addr_ = new ::std::string;
  }
  return addr_;
}

// optional int32 virtual_node = 5 [default = -1];
inline bool AddCacheServerRequest::has_virtual_node() const {
  return _has_bit(4);
}
inline void AddCacheServerRequest::clear_virtual_node() {
  virtual_node_ = -1;
  _clear_bit(4);
}
inline ::google::protobuf::int32 AddCacheServerRequest::virtual_node() const {
  return virtual_node_;
}
inline void AddCacheServerRequest::set_virtual_node(::google::protobuf::int32 value) {
  _set_bit(4);
  virtual_node_ = value;
}

// -------------------------------------------------------------------

// AddModuleRequest

// required uint32 module = 1;
inline bool AddModuleRequest::has_module() const {
  return _has_bit(0);
}
inline void AddModuleRequest::clear_module() {
  module_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 AddModuleRequest::module() const {
  return module_;
}
inline void AddModuleRequest::set_module(::google::protobuf::uint32 value) {
  _set_bit(0);
  module_ = value;
}

// required string addr = 2;
inline bool AddModuleRequest::has_addr() const {
  return _has_bit(1);
}
inline void AddModuleRequest::clear_addr() {
  if (addr_ != &_default_addr_) {
    addr_->clear();
  }
  _clear_bit(1);
}
inline const ::std::string& AddModuleRequest::addr() const {
  return *addr_;
}
inline void AddModuleRequest::set_addr(const ::std::string& value) {
  _set_bit(1);
  if (addr_ == &_default_addr_) {
    addr_ = new ::std::string;
  }
  addr_->assign(value);
}
inline void AddModuleRequest::set_addr(const char* value) {
  _set_bit(1);
  if (addr_ == &_default_addr_) {
    addr_ = new ::std::string;
  }
  addr_->assign(value);
}
inline void AddModuleRequest::set_addr(const char* value, size_t size) {
  _set_bit(1);
  if (addr_ == &_default_addr_) {
    addr_ = new ::std::string;
  }
  addr_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* AddModuleRequest::mutable_addr() {
  _set_bit(1);
  if (addr_ == &_default_addr_) {
    addr_ = new ::std::string;
  }
  return addr_;
}

// required string accesstoken = 3;
inline bool AddModuleRequest::has_accesstoken() const {
  return _has_bit(2);
}
inline void AddModuleRequest::clear_accesstoken() {
  if (accesstoken_ != &_default_accesstoken_) {
    accesstoken_->clear();
  }
  _clear_bit(2);
}
inline const ::std::string& AddModuleRequest::accesstoken() const {
  return *accesstoken_;
}
inline void AddModuleRequest::set_accesstoken(const ::std::string& value) {
  _set_bit(2);
  if (accesstoken_ == &_default_accesstoken_) {
    accesstoken_ = new ::std::string;
  }
  accesstoken_->assign(value);
}
inline void AddModuleRequest::set_accesstoken(const char* value) {
  _set_bit(2);
  if (accesstoken_ == &_default_accesstoken_) {
    accesstoken_ = new ::std::string;
  }
  accesstoken_->assign(value);
}
inline void AddModuleRequest::set_accesstoken(const char* value, size_t size) {
  _set_bit(2);
  if (accesstoken_ == &_default_accesstoken_) {
    accesstoken_ = new ::std::string;
  }
  accesstoken_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* AddModuleRequest::mutable_accesstoken() {
  _set_bit(2);
  if (accesstoken_ == &_default_accesstoken_) {
    accesstoken_ = new ::std::string;
  }
  return accesstoken_;
}

// -------------------------------------------------------------------

// ChangeCacheServerAddrRequest

// required uint32 module = 1;
inline bool ChangeCacheServerAddrRequest::has_module() const {
  return _has_bit(0);
}
inline void ChangeCacheServerAddrRequest::clear_module() {
  module_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 ChangeCacheServerAddrRequest::module() const {
  return module_;
}
inline void ChangeCacheServerAddrRequest::set_module(::google::protobuf::uint32 value) {
  _set_bit(0);
  module_ = value;
}

// required string name = 2;
inline bool ChangeCacheServerAddrRequest::has_name() const {
  return _has_bit(1);
}
inline void ChangeCacheServerAddrRequest::clear_name() {
  if (name_ != &_default_name_) {
    name_->clear();
  }
  _clear_bit(1);
}
inline const ::std::string& ChangeCacheServerAddrRequest::name() const {
  return *name_;
}
inline void ChangeCacheServerAddrRequest::set_name(const ::std::string& value) {
  _set_bit(1);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void ChangeCacheServerAddrRequest::set_name(const char* value) {
  _set_bit(1);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void ChangeCacheServerAddrRequest::set_name(const char* value, size_t size) {
  _set_bit(1);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ChangeCacheServerAddrRequest::mutable_name() {
  _set_bit(1);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  return name_;
}

// required string addr = 3;
inline bool ChangeCacheServerAddrRequest::has_addr() const {
  return _has_bit(2);
}
inline void ChangeCacheServerAddrRequest::clear_addr() {
  if (addr_ != &_default_addr_) {
    addr_->clear();
  }
  _clear_bit(2);
}
inline const ::std::string& ChangeCacheServerAddrRequest::addr() const {
  return *addr_;
}
inline void ChangeCacheServerAddrRequest::set_addr(const ::std::string& value) {
  _set_bit(2);
  if (addr_ == &_default_addr_) {
    addr_ = new ::std::string;
  }
  addr_->assign(value);
}
inline void ChangeCacheServerAddrRequest::set_addr(const char* value) {
  _set_bit(2);
  if (addr_ == &_default_addr_) {
    addr_ = new ::std::string;
  }
  addr_->assign(value);
}
inline void ChangeCacheServerAddrRequest::set_addr(const char* value, size_t size) {
  _set_bit(2);
  if (addr_ == &_default_addr_) {
    addr_ = new ::std::string;
  }
  addr_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ChangeCacheServerAddrRequest::mutable_addr() {
  _set_bit(2);
  if (addr_ == &_default_addr_) {
    addr_ = new ::std::string;
  }
  return addr_;
}

// -------------------------------------------------------------------

// RemoveCacheServerRequest

// required uint32 module = 1;
inline bool RemoveCacheServerRequest::has_module() const {
  return _has_bit(0);
}
inline void RemoveCacheServerRequest::clear_module() {
  module_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 RemoveCacheServerRequest::module() const {
  return module_;
}
inline void RemoveCacheServerRequest::set_module(::google::protobuf::uint32 value) {
  _set_bit(0);
  module_ = value;
}

// required string name = 2;
inline bool RemoveCacheServerRequest::has_name() const {
  return _has_bit(1);
}
inline void RemoveCacheServerRequest::clear_name() {
  if (name_ != &_default_name_) {
    name_->clear();
  }
  _clear_bit(1);
}
inline const ::std::string& RemoveCacheServerRequest::name() const {
  return *name_;
}
inline void RemoveCacheServerRequest::set_name(const ::std::string& value) {
  _set_bit(1);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void RemoveCacheServerRequest::set_name(const char* value) {
  _set_bit(1);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void RemoveCacheServerRequest::set_name(const char* value, size_t size) {
  _set_bit(1);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* RemoveCacheServerRequest::mutable_name() {
  _set_bit(1);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  return name_;
}

// optional int32 virtual_node = 3 [default = -1];
inline bool RemoveCacheServerRequest::has_virtual_node() const {
  return _has_bit(2);
}
inline void RemoveCacheServerRequest::clear_virtual_node() {
  virtual_node_ = -1;
  _clear_bit(2);
}
inline ::google::protobuf::int32 RemoveCacheServerRequest::virtual_node() const {
  return virtual_node_;
}
inline void RemoveCacheServerRequest::set_virtual_node(::google::protobuf::int32 value) {
  _set_bit(2);
  virtual_node_ = value;
}

// -------------------------------------------------------------------

// RemoveModuleRequest

// required uint32 module = 1;
inline bool RemoveModuleRequest::has_module() const {
  return _has_bit(0);
}
inline void RemoveModuleRequest::clear_module() {
  module_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 RemoveModuleRequest::module() const {
  return module_;
}
inline void RemoveModuleRequest::set_module(::google::protobuf::uint32 value) {
  _set_bit(0);
  module_ = value;
}

// -------------------------------------------------------------------

// ReloadConfigRequest

// required string config = 1;
inline bool ReloadConfigRequest::has_config() const {
  return _has_bit(0);
}
inline void ReloadConfigRequest::clear_config() {
  if (config_ != &_default_config_) {
    config_->clear();
  }
  _clear_bit(0);
}
inline const ::std::string& ReloadConfigRequest::config() const {
  return *config_;
}
inline void ReloadConfigRequest::set_config(const ::std::string& value) {
  _set_bit(0);
  if (config_ == &_default_config_) {
    config_ = new ::std::string;
  }
  config_->assign(value);
}
inline void ReloadConfigRequest::set_config(const char* value) {
  _set_bit(0);
  if (config_ == &_default_config_) {
    config_ = new ::std::string;
  }
  config_->assign(value);
}
inline void ReloadConfigRequest::set_config(const char* value, size_t size) {
  _set_bit(0);
  if (config_ == &_default_config_) {
    config_ = new ::std::string;
  }
  config_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ReloadConfigRequest::mutable_config() {
  _set_bit(0);
  if (config_ == &_default_config_) {
    config_ = new ::std::string;
  }
  return config_;
}

// -------------------------------------------------------------------

// Reply

// required uint32 status = 1;
inline bool Reply::has_status() const {
  return _has_bit(0);
}
inline void Reply::clear_status() {
  status_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 Reply::status() const {
  return status_;
}
inline void Reply::set_status(::google::protobuf::uint32 value) {
  _set_bit(0);
  status_ = value;
}

// required string msg = 2;
inline bool Reply::has_msg() const {
  return _has_bit(1);
}
inline void Reply::clear_msg() {
  if (msg_ != &_default_msg_) {
    msg_->clear();
  }
  _clear_bit(1);
}
inline const ::std::string& Reply::msg() const {
  return *msg_;
}
inline void Reply::set_msg(const ::std::string& value) {
  _set_bit(1);
  if (msg_ == &_default_msg_) {
    msg_ = new ::std::string;
  }
  msg_->assign(value);
}
inline void Reply::set_msg(const char* value) {
  _set_bit(1);
  if (msg_ == &_default_msg_) {
    msg_ = new ::std::string;
  }
  msg_->assign(value);
}
inline void Reply::set_msg(const char* value, size_t size) {
  _set_bit(1);
  if (msg_ == &_default_msg_) {
    msg_ = new ::std::string;
  }
  msg_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Reply::mutable_msg() {
  _set_bit(1);
  if (msg_ == &_default_msg_) {
    msg_ = new ::std::string;
  }
  return msg_;
}

// -------------------------------------------------------------------

// HeartBeat

// required string version = 1;
inline bool HeartBeat::has_version() const {
  return _has_bit(0);
}
inline void HeartBeat::clear_version() {
  if (version_ != &_default_version_) {
    version_->clear();
  }
  _clear_bit(0);
}
inline const ::std::string& HeartBeat::version() const {
  return *version_;
}
inline void HeartBeat::set_version(const ::std::string& value) {
  _set_bit(0);
  if (version_ == &_default_version_) {
    version_ = new ::std::string;
  }
  version_->assign(value);
}
inline void HeartBeat::set_version(const char* value) {
  _set_bit(0);
  if (version_ == &_default_version_) {
    version_ = new ::std::string;
  }
  version_->assign(value);
}
inline void HeartBeat::set_version(const char* value, size_t size) {
  _set_bit(0);
  if (version_ == &_default_version_) {
    version_ = new ::std::string;
  }
  version_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* HeartBeat::mutable_version() {
  _set_bit(0);
  if (version_ == &_default_version_) {
    version_ = new ::std::string;
  }
  return version_;
}

// required uint32 configure_version = 2;
inline bool HeartBeat::has_configure_version() const {
  return _has_bit(1);
}
inline void HeartBeat::clear_configure_version() {
  configure_version_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 HeartBeat::configure_version() const {
  return configure_version_;
}
inline void HeartBeat::set_configure_version(::google::protobuf::uint32 value) {
  _set_bit(1);
  configure_version_ = value;
}

// required string configure_md5 = 3;
inline bool HeartBeat::has_configure_md5() const {
  return _has_bit(2);
}
inline void HeartBeat::clear_configure_md5() {
  if (configure_md5_ != &_default_configure_md5_) {
    configure_md5_->clear();
  }
  _clear_bit(2);
}
inline const ::std::string& HeartBeat::configure_md5() const {
  return *configure_md5_;
}
inline void HeartBeat::set_configure_md5(const ::std::string& value) {
  _set_bit(2);
  if (configure_md5_ == &_default_configure_md5_) {
    configure_md5_ = new ::std::string;
  }
  configure_md5_->assign(value);
}
inline void HeartBeat::set_configure_md5(const char* value) {
  _set_bit(2);
  if (configure_md5_ == &_default_configure_md5_) {
    configure_md5_ = new ::std::string;
  }
  configure_md5_->assign(value);
}
inline void HeartBeat::set_configure_md5(const char* value, size_t size) {
  _set_bit(2);
  if (configure_md5_ == &_default_configure_md5_) {
    configure_md5_ = new ::std::string;
  }
  configure_md5_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* HeartBeat::mutable_configure_md5() {
  _set_bit(2);
  if (configure_md5_ == &_default_configure_md5_) {
    configure_md5_ = new ::std::string;
  }
  return configure_md5_;
}

// required uint32 agent_id = 4;
inline bool HeartBeat::has_agent_id() const {
  return _has_bit(3);
}
inline void HeartBeat::clear_agent_id() {
  agent_id_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 HeartBeat::agent_id() const {
  return agent_id_;
}
inline void HeartBeat::set_agent_id(::google::protobuf::uint32 value) {
  _set_bit(3);
  agent_id_ = value;
}

// -------------------------------------------------------------------

// HeartBeatReply

// required uint32 latest_configure_version = 1;
inline bool HeartBeatReply::has_latest_configure_version() const {
  return _has_bit(0);
}
inline void HeartBeatReply::clear_latest_configure_version() {
  latest_configure_version_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 HeartBeatReply::latest_configure_version() const {
  return latest_configure_version_;
}
inline void HeartBeatReply::set_latest_configure_version(::google::protobuf::uint32 value) {
  _set_bit(0);
  latest_configure_version_ = value;
}

// required string latest_configure_md5 = 2;
inline bool HeartBeatReply::has_latest_configure_md5() const {
  return _has_bit(1);
}
inline void HeartBeatReply::clear_latest_configure_md5() {
  if (latest_configure_md5_ != &_default_latest_configure_md5_) {
    latest_configure_md5_->clear();
  }
  _clear_bit(1);
}
inline const ::std::string& HeartBeatReply::latest_configure_md5() const {
  return *latest_configure_md5_;
}
inline void HeartBeatReply::set_latest_configure_md5(const ::std::string& value) {
  _set_bit(1);
  if (latest_configure_md5_ == &_default_latest_configure_md5_) {
    latest_configure_md5_ = new ::std::string;
  }
  latest_configure_md5_->assign(value);
}
inline void HeartBeatReply::set_latest_configure_md5(const char* value) {
  _set_bit(1);
  if (latest_configure_md5_ == &_default_latest_configure_md5_) {
    latest_configure_md5_ = new ::std::string;
  }
  latest_configure_md5_->assign(value);
}
inline void HeartBeatReply::set_latest_configure_md5(const char* value, size_t size) {
  _set_bit(1);
  if (latest_configure_md5_ == &_default_latest_configure_md5_) {
    latest_configure_md5_ = new ::std::string;
  }
  latest_configure_md5_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* HeartBeatReply::mutable_latest_configure_md5() {
  _set_bit(1);
  if (latest_configure_md5_ == &_default_latest_configure_md5_) {
    latest_configure_md5_ = new ::std::string;
  }
  return latest_configure_md5_;
}

// optional bool push = 3 [default = false];
inline bool HeartBeatReply::has_push() const {
  return _has_bit(2);
}
inline void HeartBeatReply::clear_push() {
  push_ = false;
  _clear_bit(2);
}
inline bool HeartBeatReply::push() const {
  return push_;
}
inline void HeartBeatReply::set_push(bool value) {
  _set_bit(2);
  push_ = value;
}

// -------------------------------------------------------------------

// GetLatestConfigure

// optional uint32 configure_version = 1;
inline bool GetLatestConfigure::has_configure_version() const {
  return _has_bit(0);
}
inline void GetLatestConfigure::clear_configure_version() {
  configure_version_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 GetLatestConfigure::configure_version() const {
  return configure_version_;
}
inline void GetLatestConfigure::set_configure_version(::google::protobuf::uint32 value) {
  _set_bit(0);
  configure_version_ = value;
}

// -------------------------------------------------------------------

// LatestConfigureReply

// required uint32 configure_version = 1;
inline bool LatestConfigureReply::has_configure_version() const {
  return _has_bit(0);
}
inline void LatestConfigureReply::clear_configure_version() {
  configure_version_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 LatestConfigureReply::configure_version() const {
  return configure_version_;
}
inline void LatestConfigureReply::set_configure_version(::google::protobuf::uint32 value) {
  _set_bit(0);
  configure_version_ = value;
}

// required string configure = 2;
inline bool LatestConfigureReply::has_configure() const {
  return _has_bit(1);
}
inline void LatestConfigureReply::clear_configure() {
  if (configure_ != &_default_configure_) {
    configure_->clear();
  }
  _clear_bit(1);
}
inline const ::std::string& LatestConfigureReply::configure() const {
  return *configure_;
}
inline void LatestConfigureReply::set_configure(const ::std::string& value) {
  _set_bit(1);
  if (configure_ == &_default_configure_) {
    configure_ = new ::std::string;
  }
  configure_->assign(value);
}
inline void LatestConfigureReply::set_configure(const char* value) {
  _set_bit(1);
  if (configure_ == &_default_configure_) {
    configure_ = new ::std::string;
  }
  configure_->assign(value);
}
inline void LatestConfigureReply::set_configure(const char* value, size_t size) {
  _set_bit(1);
  if (configure_ == &_default_configure_) {
    configure_ = new ::std::string;
  }
  configure_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* LatestConfigureReply::mutable_configure() {
  _set_bit(1);
  if (configure_ == &_default_configure_) {
    configure_ = new ::std::string;
  }
  return configure_;
}

// -------------------------------------------------------------------

// UpdateConfigure

// required uint32 version = 1;
inline bool UpdateConfigure::has_version() const {
  return _has_bit(0);
}
inline void UpdateConfigure::clear_version() {
  version_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 UpdateConfigure::version() const {
  return version_;
}
inline void UpdateConfigure::set_version(::google::protobuf::uint32 value) {
  _set_bit(0);
  version_ = value;
}

// required string configure_cksum = 2;
inline bool UpdateConfigure::has_configure_cksum() const {
  return _has_bit(1);
}
inline void UpdateConfigure::clear_configure_cksum() {
  if (configure_cksum_ != &_default_configure_cksum_) {
    configure_cksum_->clear();
  }
  _clear_bit(1);
}
inline const ::std::string& UpdateConfigure::configure_cksum() const {
  return *configure_cksum_;
}
inline void UpdateConfigure::set_configure_cksum(const ::std::string& value) {
  _set_bit(1);
  if (configure_cksum_ == &_default_configure_cksum_) {
    configure_cksum_ = new ::std::string;
  }
  configure_cksum_->assign(value);
}
inline void UpdateConfigure::set_configure_cksum(const char* value) {
  _set_bit(1);
  if (configure_cksum_ == &_default_configure_cksum_) {
    configure_cksum_ = new ::std::string;
  }
  configure_cksum_->assign(value);
}
inline void UpdateConfigure::set_configure_cksum(const char* value, size_t size) {
  _set_bit(1);
  if (configure_cksum_ == &_default_configure_cksum_) {
    configure_cksum_ = new ::std::string;
  }
  configure_cksum_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* UpdateConfigure::mutable_configure_cksum() {
  _set_bit(1);
  if (configure_cksum_ == &_default_configure_cksum_) {
    configure_cksum_ = new ::std::string;
  }
  return configure_cksum_;
}

// required string configure = 3;
inline bool UpdateConfigure::has_configure() const {
  return _has_bit(2);
}
inline void UpdateConfigure::clear_configure() {
  if (configure_ != &_default_configure_) {
    configure_->clear();
  }
  _clear_bit(2);
}
inline const ::std::string& UpdateConfigure::configure() const {
  return *configure_;
}
inline void UpdateConfigure::set_configure(const ::std::string& value) {
  _set_bit(2);
  if (configure_ == &_default_configure_) {
    configure_ = new ::std::string;
  }
  configure_->assign(value);
}
inline void UpdateConfigure::set_configure(const char* value) {
  _set_bit(2);
  if (configure_ == &_default_configure_) {
    configure_ = new ::std::string;
  }
  configure_->assign(value);
}
inline void UpdateConfigure::set_configure(const char* value, size_t size) {
  _set_bit(2);
  if (configure_ == &_default_configure_) {
    configure_ = new ::std::string;
  }
  configure_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* UpdateConfigure::mutable_configure() {
  _set_bit(2);
  if (configure_ == &_default_configure_) {
    configure_ = new ::std::string;
  }
  return configure_;
}

// -------------------------------------------------------------------

// UpdateConfigureReply

// required uint32 ok = 1;
inline bool UpdateConfigureReply::has_ok() const {
  return _has_bit(0);
}
inline void UpdateConfigureReply::clear_ok() {
  ok_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 UpdateConfigureReply::ok() const {
  return ok_;
}
inline void UpdateConfigureReply::set_ok(::google::protobuf::uint32 value) {
  _set_bit(0);
  ok_ = value;
}

// -------------------------------------------------------------------

// SetPush

// required uint32 push = 1;
inline bool SetPush::has_push() const {
  return _has_bit(0);
}
inline void SetPush::clear_push() {
  push_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 SetPush::push() const {
  return push_;
}
inline void SetPush::set_push(::google::protobuf::uint32 value) {
  _set_bit(0);
  push_ = value;
}

// -------------------------------------------------------------------

// SetPushReply

// required uint32 ok = 1;
inline bool SetPushReply::has_ok() const {
  return _has_bit(0);
}
inline void SetPushReply::clear_ok() {
  ok_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 SetPushReply::ok() const {
  return ok_;
}
inline void SetPushReply::set_ok(::google::protobuf::uint32 value) {
  _set_bit(0);
  ok_ = value;
}

// -------------------------------------------------------------------

// QueryAgentStatus

// required uint32 id = 1;
inline bool QueryAgentStatus::has_id() const {
  return _has_bit(0);
}
inline void QueryAgentStatus::clear_id() {
  id_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 QueryAgentStatus::id() const {
  return id_;
}
inline void QueryAgentStatus::set_id(::google::protobuf::uint32 value) {
  _set_bit(0);
  id_ = value;
}

// -------------------------------------------------------------------

// QueryAgentStatusReply

// required uint32 id = 1;
inline bool QueryAgentStatusReply::has_id() const {
  return _has_bit(0);
}
inline void QueryAgentStatusReply::clear_id() {
  id_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 QueryAgentStatusReply::id() const {
  return id_;
}
inline void QueryAgentStatusReply::set_id(::google::protobuf::uint32 value) {
  _set_bit(0);
  id_ = value;
}

// required uint32 dbtime = 2;
inline bool QueryAgentStatusReply::has_dbtime() const {
  return _has_bit(1);
}
inline void QueryAgentStatusReply::clear_dbtime() {
  dbtime_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 QueryAgentStatusReply::dbtime() const {
  return dbtime_;
}
inline void QueryAgentStatusReply::set_dbtime(::google::protobuf::uint32 value) {
  _set_bit(1);
  dbtime_ = value;
}

// required uint32 lmtime = 3;
inline bool QueryAgentStatusReply::has_lmtime() const {
  return _has_bit(2);
}
inline void QueryAgentStatusReply::clear_lmtime() {
  lmtime_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 QueryAgentStatusReply::lmtime() const {
  return lmtime_;
}
inline void QueryAgentStatusReply::set_lmtime(::google::protobuf::uint32 value) {
  _set_bit(2);
  lmtime_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace agent
}  // namespace ttc

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_admin_5fprotocol_2eproto__INCLUDED
